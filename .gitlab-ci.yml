include:
  - project: 'auxdromos/auxdromos-distro'
    file: 'aws/sit/gitlab-ci/.gitlab-ci-template.yml'

# Override del job deploy_sit per disabilitarlo sul branch "distro"
deploy_sit:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "distro"'
      when: never

deploy_distro:
  stage: deploy_sit
  image:
    name: amazon/aws-cli:latest
    entrypoint: [""]

  script:
    # Carica le variabili da module_info.env
    - if [ -f module_info.env ]; then . module_info.env; fi
    - echo "DEBUG CI_COMMIT_REF_NAME = '$CI_COMMIT_REF_NAME'"
    - echo "DEBUG MODULE_NAME = '$MODULE_NAME'"
    - echo "DEBUG VERSION = '$VERSION'"
    # Controlla che il modulo sia "distro"
    - if [ "$MODULE_NAME" != "distro" ]; then echo "Il modulo non è distro, salto deploy_distro."; exit 0; fi
    # Controlla che il branch sia "distro" o "develop"
    - if [[ "$CI_COMMIT_REF_NAME" != "distro" && "$CI_COMMIT_REF_NAME" != "develop" && "$CI_COMMIT_REF_NAME" != "main" ]]; then echo "Branch $CI_COMMIT_REF_NAME non abilitato per deploy del modulo distro, salto deploy_distro."; exit 0; fi
    - echo "Deployment del modulo *distro* versione $VERSION in ambiente SIT (non eseguito sotto docker)..."
    - echo "Controllo che esista la cartella aws/sit/script:"
    - ls -la aws/sit/script
    - echo "Utilizzo script deploy_module.sh dal repository..."
    - cp aws/sit/script/deploy_module.sh deploy_module.sh
    - chmod +x deploy_module.sh
    # Carica lo script in S3 nella cartella della versione, così da mantenerlo fino a un nuovo deploy
    - aws s3 cp deploy_module.sh "s3://${S3_BUCKET_NAME}/distro/${VERSION}/deploy_module.sh"
    # Ottieni gli ID delle istanze target tramite tag
    - >
      INSTANCE_IDS=$(aws ec2 describe-instances \
         --filters "Name=tag:Environment,Values=SIT" "Name=tag:Application,Values=auxdromos" "Name=instance-state-name,Values=running" \
         --query "Reservations[*].Instances[*].InstanceId" --output text);
      if [ -z "$INSTANCE_IDS" ]; then echo "ERRORE: Nessuna istanza EC2 trovata con i tag specificati!"; exit 1; fi;
      echo "Istanze target trovate: $INSTANCE_IDS"
    # Eseguiamo lo script (ora presente su S3) sulle istanze via AWS SSM
    - |
      aws ssm send-command \
        --document-name "AWS-RunShellScript" \
        --targets "Key=instanceids,Values=$INSTANCE_IDS" \
        --parameters '{"commands": ["aws s3 cp s3://'${S3_BUCKET_NAME}'/distro/'${VERSION}'/deploy_module.sh /tmp/deploy_module.sh", "chmod +x /tmp/deploy_module.sh", "/tmp/deploy_module.sh '${MODULE_NAME}' '${VERSION}'"]}' \
        --output text
    - echo "Il file deploy_module.sh è ora disponibile sulla istanza."